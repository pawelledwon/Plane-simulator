//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/YokeControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @YokeControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @YokeControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""YokeControls"",
    ""maps"": [
        {
            ""name"": ""Airplane"",
            ""id"": ""30fcbcc9-5da1-46ca-a8f1-8e70a9197904"",
            ""actions"": [
                {
                    ""name"": ""Roll"",
                    ""type"": ""Value"",
                    ""id"": ""2f0d8bc2-5f55-4d4c-981a-69821bbe1e87"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""5e1ac207-a563-4d14-9fc7-d47226f42fa2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""353b872b-fe1d-4644-80b9-79f34248a9c2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Throttle"",
                    ""type"": ""Value"",
                    ""id"": ""692fd7ed-2606-4868-a83c-fe11389622ec"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""aab9c6b6-6a83-488b-8bc5-370e01de7ab5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FlapsIncrease"",
                    ""type"": ""Button"",
                    ""id"": ""24630092-704a-4e8a-a12b-fdd12b2ee56a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FlapsDecrease"",
                    ""type"": ""Button"",
                    ""id"": ""710a4573-1671-4bcc-912d-4cba89082b77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d08ee8aa-3edf-4fd1-9013-1b8cd95f8046"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d379af8a-8be1-49e0-aa62-ff4e2417935a"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Yoke>/stick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""320492db-7e6f-4329-8e79-f361eb8f004b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""22e98f98-5e40-45e2-a0d6-68ff4cb71c23"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""734b1133-78a5-4c7a-b1ff-9227b944a050"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f74c2736-6fc4-48ff-a8c5-8fc276656856"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d66adb25-6038-4d25-8885-3f4d84989610"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Yoke>/stick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""a1aff041-df31-43f0-844d-f3796f036fae"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""61e3d466-c4c6-4225-95ae-ff6e81522b04"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""321fad79-79bf-486e-83eb-b16516c6cf4d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4e1aee66-d910-4a53-9822-8fcb5bfba48b"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Yoke"",
                    ""id"": ""17e93466-8087-4754-91ca-10cc3eee1833"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f107234e-a17a-4814-8eda-ec92da95c5b1"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Yoke>/button7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7052d3e1-015a-4256-bb9b-ee5f76493f5e"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Yoke>/button8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""727631ac-c7b2-4a3e-9750-f54a2d8497ed"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""499440d2-8d48-479c-8f16-ae65b4d09042"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""bc04555e-bc2e-4ab4-a5c4-c1195b56099c"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""28f49027-d5d5-43a4-9e89-cafb83a10a21"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Rudder Pedals>/rz"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dfb37f7-3bb8-4b15-be09-94ad3fa75983"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29b6fba8-b8de-4e42-b57c-97f0022b84ae"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d54ae1b4-f58b-4795-ad5f-ce9a6c2d1254"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Rudder Pedals>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39f30c4f-d21a-4828-8d21-f19a76da4d87"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Rudder Pedals>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Yoke"",
                    ""id"": ""781f828e-55dc-4443-a982-d4b76e776a8e"",
                    ""path"": ""1DAxis(whichSideWins=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""22bef72e-a4d6-4a05-9af1-3c133ef8fd55"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Yoke>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2ffa43ae-af7f-4c26-98ce-befa774c73f5"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Yoke>/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""86105d60-86f9-405f-9284-abf752998a7f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""59d6948e-af7d-4779-8841-a3bef08bb869"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c6a2befd-c4d1-4d5d-a7df-7000a16f9722"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""187ffc3e-57f1-436c-ac55-da68af3d3c76"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""cb80a8bf-01f7-4e0a-b861-c5b10d42cce7"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""759fa477-71e9-4fdf-b2fc-42c39420e897"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e45d816c-c9e4-4483-bfba-c26be3b54650"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FlapsIncrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba003734-78fc-478f-a2fb-fff3715f1b20"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""FlapsIncrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""119061d7-af0d-4e05-a65f-dc27a9b916a2"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Yoke>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""FlapsIncrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ac5278f-0b2c-4b68-86cc-c7b582023c38"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FlapsDecrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0008e354-f5be-40ac-9675-9459b346afe3"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""FlapsDecrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86be51ea-90ea-48d5-ac27-786b2a697c59"",
                    ""path"": ""<HID::Saitek Saitek Pro Flight Yoke>/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Yoke"",
                    ""action"": ""FlapsDecrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Yoke"",
            ""bindingGroup"": ""Yoke"",
            ""devices"": [
                {
                    ""devicePath"": ""<HID::Saitek Saitek Pro Flight Yoke>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Airplane
        m_Airplane = asset.FindActionMap("Airplane", throwIfNotFound: true);
        m_Airplane_Roll = m_Airplane.FindAction("Roll", throwIfNotFound: true);
        m_Airplane_Pitch = m_Airplane.FindAction("Pitch", throwIfNotFound: true);
        m_Airplane_Yaw = m_Airplane.FindAction("Yaw", throwIfNotFound: true);
        m_Airplane_Throttle = m_Airplane.FindAction("Throttle", throwIfNotFound: true);
        m_Airplane_Brake = m_Airplane.FindAction("Brake", throwIfNotFound: true);
        m_Airplane_FlapsIncrease = m_Airplane.FindAction("FlapsIncrease", throwIfNotFound: true);
        m_Airplane_FlapsDecrease = m_Airplane.FindAction("FlapsDecrease", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Airplane
    private readonly InputActionMap m_Airplane;
    private List<IAirplaneActions> m_AirplaneActionsCallbackInterfaces = new List<IAirplaneActions>();
    private readonly InputAction m_Airplane_Roll;
    private readonly InputAction m_Airplane_Pitch;
    private readonly InputAction m_Airplane_Yaw;
    private readonly InputAction m_Airplane_Throttle;
    private readonly InputAction m_Airplane_Brake;
    private readonly InputAction m_Airplane_FlapsIncrease;
    private readonly InputAction m_Airplane_FlapsDecrease;
    public struct AirplaneActions
    {
        private @YokeControls m_Wrapper;
        public AirplaneActions(@YokeControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Roll => m_Wrapper.m_Airplane_Roll;
        public InputAction @Pitch => m_Wrapper.m_Airplane_Pitch;
        public InputAction @Yaw => m_Wrapper.m_Airplane_Yaw;
        public InputAction @Throttle => m_Wrapper.m_Airplane_Throttle;
        public InputAction @Brake => m_Wrapper.m_Airplane_Brake;
        public InputAction @FlapsIncrease => m_Wrapper.m_Airplane_FlapsIncrease;
        public InputAction @FlapsDecrease => m_Wrapper.m_Airplane_FlapsDecrease;
        public InputActionMap Get() { return m_Wrapper.m_Airplane; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AirplaneActions set) { return set.Get(); }
        public void AddCallbacks(IAirplaneActions instance)
        {
            if (instance == null || m_Wrapper.m_AirplaneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AirplaneActionsCallbackInterfaces.Add(instance);
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Throttle.started += instance.OnThrottle;
            @Throttle.performed += instance.OnThrottle;
            @Throttle.canceled += instance.OnThrottle;
            @Brake.started += instance.OnBrake;
            @Brake.performed += instance.OnBrake;
            @Brake.canceled += instance.OnBrake;
            @FlapsIncrease.started += instance.OnFlapsIncrease;
            @FlapsIncrease.performed += instance.OnFlapsIncrease;
            @FlapsIncrease.canceled += instance.OnFlapsIncrease;
            @FlapsDecrease.started += instance.OnFlapsDecrease;
            @FlapsDecrease.performed += instance.OnFlapsDecrease;
            @FlapsDecrease.canceled += instance.OnFlapsDecrease;
        }

        private void UnregisterCallbacks(IAirplaneActions instance)
        {
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Throttle.started -= instance.OnThrottle;
            @Throttle.performed -= instance.OnThrottle;
            @Throttle.canceled -= instance.OnThrottle;
            @Brake.started -= instance.OnBrake;
            @Brake.performed -= instance.OnBrake;
            @Brake.canceled -= instance.OnBrake;
            @FlapsIncrease.started -= instance.OnFlapsIncrease;
            @FlapsIncrease.performed -= instance.OnFlapsIncrease;
            @FlapsIncrease.canceled -= instance.OnFlapsIncrease;
            @FlapsDecrease.started -= instance.OnFlapsDecrease;
            @FlapsDecrease.performed -= instance.OnFlapsDecrease;
            @FlapsDecrease.canceled -= instance.OnFlapsDecrease;
        }

        public void RemoveCallbacks(IAirplaneActions instance)
        {
            if (m_Wrapper.m_AirplaneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAirplaneActions instance)
        {
            foreach (var item in m_Wrapper.m_AirplaneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AirplaneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AirplaneActions @Airplane => new AirplaneActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_YokeSchemeIndex = -1;
    public InputControlScheme YokeScheme
    {
        get
        {
            if (m_YokeSchemeIndex == -1) m_YokeSchemeIndex = asset.FindControlSchemeIndex("Yoke");
            return asset.controlSchemes[m_YokeSchemeIndex];
        }
    }
    public interface IAirplaneActions
    {
        void OnRoll(InputAction.CallbackContext context);
        void OnPitch(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnThrottle(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnFlapsIncrease(InputAction.CallbackContext context);
        void OnFlapsDecrease(InputAction.CallbackContext context);
    }
}
